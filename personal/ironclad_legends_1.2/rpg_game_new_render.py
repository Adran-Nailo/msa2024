import characters
import turtle
from time import sleep

class color:

    default = "\033[0m"
    darkgrey = "\033[90m"
    green = "\033[32m"
    purple = "\033[95m"
    blue = '\033[94m'
    cyan = '\033[96m'
    yellow = '\033[93m'
    red = '\033[91m'
    clear = '\033[0m'
    bold = '\033[1m'
    underline = '\033[4m'
    error = "\033[91;1;4m"
    black = '\033[30m'
    darkred = '\033[31m'
    orange = '\033[33m'
    darkblue = '\033[34m'
    darkpurple = '\033[35m'
    darkcyan = '\033[36m'
    lightgrey = '\033[37m'
    lightgreen = '\033[92m'

class maps:
    world_map = [
            ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[t]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[t]","[w]","[w]","[W]","[w]","[w]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[w]","   ","   ","   ","[w]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[W]","   ","   ","   ","[W]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","H2O","H2O","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[w]","   ","   ","   ","[w]","[ ]","[ ]","[ ]","[t]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","H2O","H2O","H2O","H2O","H2O","H2O","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[w]","[w]","h01","[w]","[w]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[t]","[ ]","[ ]","[ ]","H2O","H2O","H2O","H2O","H2O","H2O","H2O","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[c]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","m01","[ ]","[ ]","[ ]","[ ]","[ ]","c03","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[t]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","s02","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[c]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[t]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[c]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[b]","[b]","H2O","[ ]","[ ]","gcw","gcw","   ","   ","   ","   ","   ","gcw","gcw","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[t]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[b]","[b]","[b]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[t]","[ ]","[ ]","[ ]","H2O","H2O","[b]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[c]","[ ]","[t]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[t]","[t]","[t]","[t]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[t]","[t]","[t]","[t]","[t]","[t]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","d03","d03","   ","   ","   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[t]","[t]","[t]","[t]","[t]","[t]","[t]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[f]","[f]","[ ]","[ ]","[ ]","[ ]","[t]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","d03","d03","   ","   ","   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[t]","[t]","[t]","[t]","[t]","[t]","[t]","[t]","[ ]","[ ]","[ ]","[ ]","[f]","[f]","[f]","[f]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[t]","[t]","[t]","[t]","[t]","[t]","[t]","[t]","[ ]","[ ]","[ ]","[f]","[f]","[f]","[f]","[f]","[f]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   ","   ","   ","d04","d04","[ ]","[ ]","[ ]","[b]","[b]","[b]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[c]","[t]","[t]","[t]","[t]","[t]","[t]","[t]","[ ]","[ ]","[ ]","[f]","[f]","[f]","[f]","[f]","[f]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   ","   ","   ","d04","d04","[ ]","[ ]","[ ]","[b]","[b]","[b]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","c02","[c]","[t]","[t]","[t]","[t]","[t]","[ ]","[ ]","[ ]","[f]","[f]","[f]","[f]","[f]","[f]","[f]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[b]","[b]","[b]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","H20","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","H2O","H2O","H2O","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","H2O","H2O","H2O","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","H2O","H2O","H2O","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","H2O","H2O","H2O","H2O","H2O","H2O","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","   "],
            ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "]
        ]
    h01 = [
            ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "],
            ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "],
            ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "],
            ["   ","   ","   ","[w]","[w]","[w]","[w]","[w]","[w]","[w]","[w]","[w]","[w]","[w]","   ","   ","   "],
            ["   ","   ","   ","[w]","c01","[c]","[c]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[w]","   ","   ","   "],
            ["   ","   ","   ","[w]","[c]","[c]","[c]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[w]","   ","   ","   "],
            ["   ","   ","   ","[w]","[c]","[c]","[c]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[w]","   ","   ","   "],
            ["   ","   ","   ","[w]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[w]","   ","   ","   "],
            ["   ","   ","   ","[w]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[w]","   ","   ","   "],
            ["   ","   ","   ","[w]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[w]","   ","   ","   "],
            ["   ","   ","   ","[w]","[ ]","[ ]","[ ]","[ ]","s01","[ ]","[ ]","[ ]","[ ]","[w]","   ","   ","   "],
            ["   ","   ","   ","[w]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[w]","   ","   ","   "],
            ["   ","   ","   ","[w]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[w]","   ","   ","   "],
            ["   ","   ","   ","[w]","[w]","[w]","[w]","[w]","w01","[w]","[w]","[w]","[w]","[w]","   ","   ","   "],
            ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "],
            ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "],
            ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "]
        ]
    dungeon1 = [
        ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "],
        ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "],
        ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","w02","w02","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","w02","w02","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","w03","w03","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","w03","w03","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","[ ]","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","gcw","   ","   ","   "],
        ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "],
        ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "],
        ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "],
        ["   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   ","   "],
    ]

class dialogues():
    def s02():
        user_input = input("do you want to see the keybinds?\ny/n ")
        if user_input == "y":
            print("w = move up\na = move left\ns = move down\nd = move right\np = place a wall\nh = dig a hole\ne = interact with all tiles within one space\ni = check inventory")
        user_input = input("do you want to read the tutorial?\ny/n ")
        if user_input == "y":
            print(f"the world is quite large, so don't be afraid to explore\nthere are many tiles that have no effect to your chaarachter, such as [ ], [{color.green}t{color.clear}], and [{color.underline} {color.clear}]")
            print(f"there are many tiles that are impassable, but have no penalty for trying, such as {color.red}[W]{color.clear}, {color.red}[{color.blue}W{color.red}]{color.clear}, and [{color.yellow}d{color.clear}]")
            print(f"some tiles, such as [{color.purple}C{color.clear}] and [{color.yellow}d{color.clear}], \ncan be interacted with for some effect, whether it is increaseing your score or going through a door")
            print(f"some tiles, such as [{color.red}f{color.clear}], are passable, but will decrease your score if you walk trough them]")
            print(f"some tiles, such as {color.blue}[W]{color.clear}, are impassable, and will decrease your score if you try to enter their space")
            print(f"if you place a tile (with p or h) it will place it in the same place as you, although it will have no effect on you until you move off its space")
            print("it takes construction pieces to place down walls or dig holes")
            print(f"if you encounter a tile that looks like -> [{color.purple}m{color.clear}], you can interact with it to talk to a merchant, and use your gold")
            print("currently there is no use for swords or potions, but they will be implemented eventually")
        user_input = input("do you want to see what each tile is?\ny/n ")
        if user_input == "y":
            print(f"[ ] = ground\n[0] = player\n[{color.green}t{color.clear}] = tree\n{color.red}[W]{color.clear} = house wall\n{color.red}[{color.blue}W{color.red}]{color.clear} = window\n[{color.yellow}c{color.clear}] = coin\n[{color.purple}c{color.clear}] = unopened chest\n[{color.blue}c{color.clear}] = opened chest\n[{color.red}f{color.clear}] = fire\n[{color.yellow}S{color.clear}] = sign\n[{color.yellow}d{color.clear}] = door\n[{color.purple}m{color.clear}] = merchant\n{color.blue}[W]{color.clear} = water\n{color.underline}[ ]{color.clear} = bridge\n{color.darkgrey}[W]{color.clear} = castle wall")
        user_input = input(f"do you want to set a new render distance?\nit is currently set to {player.render_distance}\ny/n ")
        if user_input == "y":
            while True:
                try:
                    new_render_distance = int(input("Enter the new render distance: "))
                    player.render_distance = new_render_distance
                    break
                except:
                    print("please enter a whole number")
        input("press enter to continue")
    def m01():
        print("welcome to my shop!")
        user_input = input("would you like to look at my wares? \nI've got a limited stock right now\ny/n ")
        wares =  ["1x construction tool","1x sword","3x potion"]
        prices = [5,20,4]
        objects = [
            [1,0,0],
            [0,1,0],
            [0,0,3]
        ]
        if user_input == "y": 
            while True:
                print(f"{color.yellow}type the number of the object that you want to buy, or if you are done, type 'done'{color.clear}")
                for object in wares:
                    print(f"{wares.index(object)+1}: {object} -> {prices[wares.index(object)]}")
                try:
                    user_input = input("")
                    uppercase_user_input = user_input.capitalize()
                    if uppercase_user_input == "Done":
                        print("\nCome again!")
                        break
                    else:
                        user_input = int(user_input)
                except: 
                    print(f"{color.error}please enter a correct response{color.clear}")
                for ware in range(len(wares)):
                    if  user_input == ware+1:
                        if prices[ware] > player.score:
                            print("you don't have enough money for that")
                        else:
                            print(f"\nYou lost {prices[ware]} gold!\nYou got {wares[ware]}!")
                            player.score -= prices[ware]
                            player.wall_count += objects[ware][0]
                            player.sword_count += objects[ware][1]
                            player.potion_count += objects[ware][2]
        else:
            print("\ncome back if you change your mind!")

player = characters.Characters(11,9,0,"[0]",maps.world_map)
t = turtle.Turtle()
wn = turtle.Screen()
player_icon = turtle.Turtle()
player_icon.turtlesize(3)
t.speed(0)
player_icon.goto(12.5,0)

#lists that determine if items are interactable.
#make sure to also update the lists in the interact function
#make sure to add all doors to the impassable list
signs = ["s01","s02"]
containers = ["c01","c02","c03"]
doors = ["h01","w01","d04","d03","w02","w03"]
merchants = ["m01"]

def check_inventory():
    print(f"Gold = {player.score}")
    if player.sword_count != 0:
        print(f"Sword = {player.sword_count}")
    if player.potion_count != 0:
        print(f"Potion = {player.potion_count}")
    if player.wall_count != 0:
        print(f"Wall = {player.wall_count}")

def get_player_direction(valid_key_list):
    #while True:
    valid_directions = valid_key_list
    direction = input("Enter key: ")
    direction_list = []  
        
    #all_moves = direction.split("")
    #for move_number in all_moves:
    for letter in direction:
        if letter in valid_directions:
            direction_list += letter
    
    return direction_list

def place_item(current_map,tile):
    if player.wall_count > 0:
        current_map[player.coordinates_y][player.coordinates_x] = tile
        player.wall_count -= 1
    else:
        print("You do not have enough wall pieces to place down a wall")

def interaction_decision_maker(interactable_object):
    if interactable_object == "s02":
            dialogues.s02()
    elif interactable_object == "m01":
            dialogues.m01()

def door_interaction(door_string):   
    for current_tile in range(len(doors)):
        start_pos =    [
            [12,8],
            [8,11],
            [24,20],
            [18,5],
            [22,28],
            [25,38]
        ]
        list_of_maps = [maps.h01,maps.world_map,maps.dungeon1,maps.dungeon1,maps.world_map,maps.world_map]
        if doors[current_tile] == door_string:
            player.current_map = list_of_maps[current_tile]
            player.coordinates_x = start_pos[current_tile][1]
            player.coordinates_y = start_pos[current_tile][0]

#function to add points to the player's score when they open a container
def container(container_string):
    #container names    
    #the amount of points added when the player opens the container
    container_loot = [5,15,0]
    extra_check = [False,False,True]
    #for the extra loot, each number coresponds to the amount added in sword count, potion count, and wall count, in that order
    extra_loot = [
        [0, 0, 0],
        [0, 0, 0],
        [1, 5, 10]
        ]
    for number in range(len(containers)):
        if container_string == containers[number]:
            player.score += container_loot[number]
            print(f"You found {container_loot[number]} gold!")
            skip_map = True
        if extra_check[number] == True and container_string == containers[number]:
            if extra_loot[number][0]!=0:
                player.sword_count += extra_loot[number][0]
                print(f"you found {extra_loot[number][0]} sword(s)!")
            if extra_loot[number][1]!=0:
                player.potion_count += extra_loot[number][1]
                print(f"you found {extra_loot[number][1]} potion(s)!")
            if extra_loot[number][2]!=0:
                player.wall_count += extra_loot[number][2]
                print(f"you found {extra_loot[number][2]} wall piece(s)!")
            skip_map = True
        else:
            skip_map = False
    return skip_map

#function to run the interaction with objects
def interact(current_map):
    skip_map = False
    left_bound = player.coordinates_x -1
    right_bound = player.coordinates_x + 1
    upper_bound = player.coordinates_y -1
    lower_bound = player.coordinates_y +1
    #list of object keys found on the current game map that you can interact with
    #make sure to also update the lists at the top of the code
    simple_sign = ["s01"]
    simple_sign_messages = ["Home\nSweet\nHome"]
    conversations = ["s02"] + merchants
    interactable_objects = simple_sign + containers +conversations + doors
    #messages that coincide with the same index number in the interactable_objects list

    for row in range(upper_bound,lower_bound + 1):
            for length in range(left_bound, right_bound + 1): 
                if current_map[row][length] in interactable_objects:
                    current_interactable_object = current_map[row][length]
                    index_number = interactable_objects.index(current_interactable_object)
                    if current_interactable_object in conversations:
                        interaction_decision_maker(current_interactable_object)                        
                    elif current_interactable_object in containers:
                        skip_map = container(interactable_objects[index_number])
                        player.current_map[row][length] = "[C]"
                    elif current_interactable_object in doors:
                        door_interaction(interactable_objects[index_number])
                    elif current_interactable_object in simple_sign:
                        print(f"{color.yellow}{simple_sign_messages[simple_sign.index(current_interactable_object)]}{color.default}")
                        skip_map = True
    return skip_map

def player_movement (current_map):
    skip_map = False
    possible_keys = ["w","a","s","d","p","h","e","i"]
    #make sure all these lists are the *SAME* length
    movement_keys =  ["w","a","s","d"]
    placement_keys = ["p","h","^","^"]
    interact_keys =  ["e","^","^","^"]
    inventory_keys = ["i","^","^","^"]
    length_of_lists = len(movement_keys)
    
    key_list = get_player_direction(possible_keys)
    solids = ["[w]","[W]","   ","H2O","gcw"] + doors
    hazards = ["   ", "H2O","[f]"]
    placeable_tiles = ["[w]","   "]
    
    #"[w]" = wall
    #"[W]" = window
    #"   " = border
    #"H2O" = water
    index_num = [0,1,0,1]
    #the number that is added before checking to see if the new postition is an impassable object
    number_1 = [-1,-1,+1,+1]
    #the number that undoes the other number's effect if the new postion is in an inpassable object
    number_2 = [1,1,-1,-1]
    coordinate_x_or_y = [0,1,0,1]
    for key in key_list:
        for number in range(length_of_lists):
            #checks to see if the user's input is in the movement keys
            if key == movement_keys[number]:
                    player.position_list[index_num[number]] += number_1[number]
                    if coordinate_x_or_y[number] == 0:
                        player.coordinates_y += number_1[number]
                    elif coordinate_x_or_y[number] == 1:
                        player.coordinates_x += number_1[number]
                    if (current_map[player.coordinates_y][player.coordinates_x] == "[c]"):
                            player.score += 1
                            print("You fould 1 gold!")
                            player.current_map[player.coordinates_y][player.coordinates_x] = "[ ]"
                    for current_hazard in hazards:
                        if (current_map[player.coordinates_y][player.coordinates_x] == current_hazard):
                            player.score -= 1
                    for current_solid in solids:
                        if (current_map[player.coordinates_y][player.coordinates_x] == current_solid):
                            player.position_list[index_num[number]] += number_2[number]
                            if coordinate_x_or_y[number] == 0:
                                player.coordinates_y += number_2[number]
                            elif coordinate_x_or_y[number] == 1:
                                player.coordinates_x += number_2[number]
            if key == interact_keys[number]:
                skip_map = interact(current_map)
            if key == inventory_keys[number]:
                skip_map = True
                check_inventory()
                
            elif key == placement_keys[number]:
                place_item(current_map,placeable_tiles[number])

    return skip_map

def create_enemies(row,column,score,icon):
    enemy = characters.Characters(row,column,score,icon)
    return enemy

def map_render_inner_tiles(key,partial_tiles):
    ["[t]","[c]","[C]","[f]"]
    colors = [color.green,color.yellow,color.cyan,color.red]
    icon = ["t","c","c","f"]
    for number in range(len(colors)):
        if key == partial_tiles[number]:
            drawn_tile = f"[{colors[number]}{icon[number]}{color.clear}]"
        elif key in doors:
            drawn_tile = f"[{color.yellow}d{color.clear}]"
        elif key in merchants:
            drawn_tile = f"[{color.purple}m{color.clear}]"
    return drawn_tile

def map_render_full_tiles(key,full_tiles):
    ["[w]","H2O","[b]","gcw"]
    colors = [color.red,color.blue,color.underline,color.darkgrey]
    icon = ["[W]","[W]","[ ]","[W]"]
    for number in range(len(colors)):
        if key == full_tiles[number]:
            drawn_tile = f"{colors[number]}{icon[number]}{color.clear}"
    return drawn_tile

def square():
    t.seth(0)
    for n in range(4):
        t.fd(50)
        t.rt(90)

def main():

    

    while True:
        width = len(player.current_map)
        skip_map = player_movement(player.current_map) 
        left_bound = player.coordinates_x - player.render_distance
        right_bound = player.coordinates_x + player.render_distance + 1
        upper_bound = player.coordinates_y -player.render_distance
        lower_bound = player.coordinates_y +player.render_distance
        partial_tiles = ["[t]","[c]","[C]","[f]","h01","w01"]
        full_tiles = ["[w]","H2O","[b]","gcw"]
        tiles = ["[t]","[c]","[C]","[f]","[w]","H2O","[b]","gcw","[ ]"]
        colors = ["dark_green","yellow","cyan","red","red","blue","silver","dim gray","green"]

        #for number_of_moves in moves
        if left_bound < 0:
            left_bound = 0
        if right_bound >= width:
            right_bound = width - 1
        if upper_bound < 0:
            upper_bound = 0
        if lower_bound >= len(player.current_map):
            lower_bound = len(player.current_map)-1
        
        if skip_map == False:
            for row in range(upper_bound,lower_bound+1):
                start_y = (lower_bound - upper_bound)*25 - row*50
                for length in range(left_bound, right_bound):
                    start_x = (right_bound - left_bound)*-25 + length*50

                    #Render and color partial tiles
                    if player.current_map[row][length] in tiles:
                        current_tile_color = colors[tiles.index(player.current_map[row][length])]
                    elif player.current_map[row][length] in doors:
                        current_tile_color = "brown"
                    elif player.current_map[row][length] in signs:
                        current_tile_color = "orange"
                    elif player.current_map[row][length] in merchants:
                        current_tile_color = "pink"
                    elif player.current_map[row][length] in containers:
                        current_tile_color = "purple"

                    t.fillcolor(current_tile_color)
                    t.penup()
                    t.goto(start_x,start_y)
                    t.seth(0)
                    t.begin_fill()
                    square()
                    t.end_fill()
                        

            
print(f"{color.bold}Welcome to (Insert Name Here)!\nEnter 'e' to view keybindings and a short tutorial, or enter any direction key to jump in without it.\nIf you decide you want to view the tutorial again or view the keybindings, just return to the sign and press 'e' to interact.{color.clear}")   
main()
wn.mainloop()